String workerDir = 'inference-api'
String credentialsId = 'deploy-key-github'
def remote = [:]

pipeline {
    agent any
    //  parameters {
    // }
    stages {
        stage('Update Source Code') {
            steps {
                script {
                    sshagent(['grit-ssh-uat']) {
                        sh "ssh  -o StrictHostKeyChecking=no   grit@43.229.132.128 git -C /home/grit/cryproplat/portal-service pull;"
                }       
            }
            }
        }
    //     stage('Prepare Resource To Host') {
    //             steps {
    //             script {
    //                 sshagent(['easyrice-ai-prod']) {
    //                     sh "ssh  -o StrictHostKeyChecking=no   ${params.USER}@${params.HOST} rm -rf deploy"
    //                     sh "ssh  -o StrictHostKeyChecking=no   ${params.USER}@${params.HOST} mkdir deploy"
    //                     sh "scp resources/.env ${params.USER}@${params.HOST}:deploy/.env"
    //                     sh "scp -r resources  ${params.USER}@${params.HOST}:deploy/resources"
    //             }       
    //             }
    //         }
    //     }
    //     stage('Update worker image') {
    //                 steps {
    //                 script {
    //                     sshagent(['easyrice-ai-prod']) {
    //                         sh "ssh  -o StrictHostKeyChecking=no   ${params.USER}@${params.HOST} docker-compose -f deploy/resources/docker-compose-worker.yml --env-file deploy/.env pull" }       
    //                 }
    //             }
    //     }
    //     stage('Deploy Worker') {
    //             steps {
    //             script {
    //                 sshagent(['easyrice-ai-prod']) {
    //                     sh "ssh  -o StrictHostKeyChecking=no  ${params.USER}@${params.HOST} docker-compose -f deploy/resources/docker-compose-worker.yml --env-file deploy/.env up -d"
    //             }       
    //             }
    //         }
    // }
    }
}